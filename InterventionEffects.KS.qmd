---
title: "Intervention Effects KS"
format: html
editor: visual
---

# Intervention Effects

```{r message=FALSE, echo=FALSE, warning=FALSE}
library(haven)
library(dplyr)
library(ggplot2)
library(reshape2)
library(patchwork)
library(cgwtools)
load("Data/BAM_redcap_long_merged.2023-07-26.RData")
completers <- unique(with(BAM_redcap_long_merged, id[ave(timepoint, id, FUN = function(x) length(unique(x))) == 3]))
target_vars <- c('gffs_sum_25', 'umb_total_sum_25', 'epsi_neg_obese_25', 'sataq_average_25', 'ibssr_mean_25')
```

```{r message=FALSE, echo=FALSE, warning=FALSE}

sd_list <- list()

for (i in target_vars) { 
  sd_df <- BAM_redcap_long_merged %>%
    filter(!is.na(timepoint), id %in% completers) %>%
    group_by(timepoint, group) %>%
    summarise(SD = sd(!!sym(i), na.rm = TRUE), Variable = i)  # Use !!sym(i) to refer to the variable name dynamically
    
  sd_list[[i]] <- sd_df
}
  
# Create a data frame with the results
sd_df <- do.call(rbind, sd_list)

save(sd_df, file = 'tabs/results_tables.RData')

sd_df$SD <- round(sd_df$SD, 2)

```

```{r}
mean_list <- list()

for (i in target_vars) { 
  mean_df <- BAM_redcap_long_merged %>%
    filter(!is.na(timepoint), id %in% completers) %>%
    group_by(timepoint, group) %>%
    summarise(mean = mean(!!sym(i), na.rm = TRUE), Variable = i)  # Use !!sym(i) to refer to the variable name dynamically
    
  mean_list[[i]] <- mean_df
}
  
# Create a data frame with the results
mean_df <- do.call(rbind, mean_list)

save(mean_df, file = 'tabs/results_tables.RData')


mean_df$mean <- round(mean_df$mean, 2)
```

```{r message=FALSE, echo=FALSE, warning=FALSE}

# Assuming you have the dataset BAM_redcap_long_merged and target_vars defined as before

# Filter BAM_redcap_long_merged to include only completers with all three timepoints
completers <- unique(with(BAM_redcap_long_merged, id[ave(timepoint, id, FUN = function(x) length(unique(x))) == 3]))

# Function to calculate Cohen's d effect size
calculate_cohens_d <- function(mean1, mean2, sd_pooled) {
  mean_diff <- mean1 - mean2
  return(mean_diff / sd_pooled)
}


# Function to calculate pooled standard deviation
pooled_sd <- function(n1, sd1, n2, sd2) {
  return(sqrt(((n1 - 1) * sd1^2 + (n2 - 1) * sd2^2) / (n1 + n2 - 2)))
}

effect_sizes_list <- list()

for (i in target_vars) {
  # Filter the data for the current target variable and only completers
  filtered_data <- BAM_redcap_long_merged %>%
    filter(id %in% completers) %>%
    select(group, timepoint, !!sym(i))
  
  # Calculate the means and standard deviations for each timepoint within each group
  means_sd <- filtered_data %>%
    group_by(group, timepoint) %>%
    summarise(
      Mean = mean(!!sym(i), na.rm = TRUE),
      SD = sd(!!sym(i), na.rm = TRUE)
    )
  
  # Extract the mean and standard deviation for each timepoint
  baseline_mean <- means_sd %>%
    filter(timepoint == "baseline") %>%
    pull(Mean)
  post_mean <- means_sd %>%
    filter(timepoint == "post") %>%
    pull(Mean)
  week8_mean <- means_sd %>%
    filter(timepoint == "8wk") %>%
    pull(Mean)
  
  baseline_sd <- means_sd %>%
    filter(timepoint == "baseline") %>%
    pull(SD)
  post_sd <- means_sd %>%
    filter(timepoint == "post") %>%
    pull(SD)
  week8_sd <- means_sd %>%
    filter(timepoint == "8wk") %>%
    pull(SD)
  
  # Calculate Cohen's d effect size for baseline-post and baseline-8wk comparisons within each group
  cohen_d_baseline_post <- calculate_cohens_d(post_mean, baseline_mean, pooled_sd(nrow(filtered_data %>% filter(timepoint == "post")), post_sd, nrow(filtered_data %>% filter(timepoint == "baseline")), baseline_sd))
  cohen_d_baseline_8_week <- calculate_cohens_d(week8_mean, baseline_mean, pooled_sd(nrow(filtered_data %>% filter(timepoint == "8wk")), week8_sd, nrow(filtered_data %>% filter(timepoint == "baseline")), baseline_sd))
  
  # Create a data frame to store the effect sizes for the current target variable
  result <- data.frame(
    group = unique(filtered_data$group),
    Variable = i,
    Cohens_d_baseline_post = cohen_d_baseline_post,
    Cohens_d_baseline_8_week = cohen_d_baseline_8_week
  )
  
  effect_sizes_list[[i]] <- result
}

# Combine all effect sizes for different target variables into a single data frame
effect_sizes_df <- do.call(rbind, effect_sizes_list)

resave(effect_sizes_df, file = 'tabs/results_tables.RData')

```

```{r message=FALSE, echo=FALSE, warning=FALSE}
rm(list = ls()[!ls() %in% c("BAM_redcap_long_merged", "mean_df", "effect_sizes_df", 'completers', 'target_vars')])
```

```{r message=FALSE, echo=FALSE, warning=FALSE}

# Function to calculate standard error
standard_error <- function(x) {
  return(sd(x, na.rm = TRUE) / sqrt(length(x)))
}

# Create a list to store the ggplot objects
ggplot_list <- list()

for (i in target_vars) {
  # Filter the data for the current target variable and only completers
  filtered_data <- BAM_redcap_long_merged %>%
    filter(id %in% completers) %>%
    select(group, timepoint, !!sym(i))

  
    filtered_data$timepoint <- factor(filtered_data$timepoint, levels = c("baseline", "post", "8wk"))
    
  # Calculate the means and standard errors for each timepoint within each group
  means_se <- filtered_data %>%
    group_by(group, timepoint) %>%
    summarise(
      Mean = mean(!!sym(i), na.rm = TRUE),
      SE = standard_error(!!sym(i))
    )
  
  # Plot the line graph with separate lines for each group
  p <- ggplot(means_se, aes(x = timepoint, y = Mean, group = group, color = group)) +
    geom_line() +
    geom_point() +
    geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE), width = 0.1) +
    labs(title = paste(i), x = "Timepoint", y = "Mean", color = "Group") +
    theme_minimal()
  
  ggplot_list[[i]] <- p
}

combined_plots <- ggplot_list[[1]] + plot_layout(ncol = 2)
for (i in 2:length(target_vars)) {
  combined_plots <- combined_plots + ggplot_list[[i]]
}

combined_plots
ggsave(plot = combined_plots, file = 'figs/targets.png')
```

```{r message=FALSE, echo=FALSE, warning=FALSE}
library(knitr)
load("tabs/results_tables.RData")
knitr::kable(effect_sizes_df, format = "html", caption = "Effect Sizes Table")
knitr::kable(mean_df, format = "html", caption = "Mean Table")
```

```{r message=FALSE, echo=FALSE, warning=FALSE}
###cleaning the table###

mean_df_table <- full_join(effect_sizes_df, mean_df)
mean_sd_cd_table <- full_join(mean_df_table, sd_df)

mean_sd_cd_table$mean <- paste(mean_sd_cd_table$mean, " (", mean_sd_cd_table$SD, ")", sep = "")

library(tidyr)
mean_sd_cd_table <- mean_sd_cd_table %>%select(-SD)

wide_mean_sd_cd_table <- pivot_wider(mean_sd_cd_table, 
                                     names_from = timepoint, 
                                     values_from = mean,
                                     names_prefix = "mean_")

wide_mean_sd_cd_table$group <- ifelse(wide_mean_sd_cd_table$group == "BP", "Body Project", 
                                ifelse(wide_mean_sd_cd_table$group == "FP", "BAM", wide_mean_sd_cd_table$group))

wide_mean_sd_cd_table$Cohens_d_baseline_post <- round(wide_mean_sd_cd_table$Cohens_d_baseline_post, 2)

wide_mean_sd_cd_table$Cohens_d_baseline_8_week <- round(wide_mean_sd_cd_table$Cohens_d_baseline_8_week, 2)

library(dplyr)

wide_mean_sd_cd_table <- wide_mean_sd_cd_table %>%
  rename(`Mean 8wk` = mean_8wk)
wide_mean_sd_cd_table <- wide_mean_sd_cd_table %>%
  rename(`Mean baseline` = mean_baseline, `Mean post` = mean_post)
  
wide_mean_sd_cd_table <- wide_mean_sd_cd_table %>%
  select(Variable, group, `Mean baseline`, `Mean post`, `Mean 8wk`, Cohens_d_baseline_post, Cohens_d_baseline_8_week)
  
final_results_table <- wide_mean_sd_cd_table %>%
  rename(`Baseline to Post (Cohen's d)` = Cohens_d_baseline_post, 
         `Baseline to 8wk (Cohen's d)` = Cohens_d_baseline_8_week)

final_results_table <- final_results_table %>%
  mutate(Measure = case_when(
    Variable == "gffs_sum_25" ~ "GFFS",
    Variable == "umb_total_sum_25" ~ "UMB-Fat",
    Variable == "epsi_neg_obese_25" ~ "EPSI Subscale",
    Variable == "sataq_average_25" ~ "SATAQ",
    Variable == "ibssr_mean_25" ~ "IBSS-R",
    TRUE ~ as.character(Variable)
  ))

final_results_table <- final_results_table %>%
  select(Measure, Variable, group, `Mean baseline`, `Mean post`, `Mean 8wk`, `Baseline to Post (Cohen's d)`,`Baseline to 8wk (Cohen's d)`)

final_results_table <- final_results_table %>%
  rename(Construct = Variable) %>%
  mutate(Construct = case_when(
    Construct == "gffs_sum_25" ~ "Fatphobia",
    Construct == "umb_total_sum_25" ~ "Anti-fat bias",
    Construct == "epsi_neg_obese_25" ~ "Negative attitudes toward obesity",
    Construct %in% c("sataq_average_25", "ibssr_mean_25") ~ "Thin ideal internalization",
    TRUE ~ Construct
  ))
print(final_results_table)
knitr::kable(final_results_table, format = "html", caption = "Intervention Effects")
```

Effect sizes were calculated for both BAM and Body Project to assess if reductions in fatphobia, anti-fat bias, and thin ideal internalization differed between interventions across time points. To see effect sizes, means, and standard deviations for each group, see table XX.

Both BAM and Body Project interventions produced reductions in fatphobia (measured via the GFFS) between baseline and post session with medium effect sizes (BAM: d = -0.51; BP: d = -0.61), but Body Project outperformed BAM by maintaining the level of reduction from baseline to 8-week post session (d = -0.60) while the reduction was diminished for BAM participants to a small effect size (d = -0.35), thus disproving our hypothesis 2a.

Both the UMB-FAT and the EPSI "Negative Attitudes Toward Obesity" subscale were used to assess anti-fat bias. Hypothesis 2b was partially confirmed with BAM participants showing a medium reduction at baseline to post session (d = -0.52) while Body Project participants only demonstrated a small reduction (d = -0.32). Despite BAM participants not exhibiting a reduction between baseline and 8-week post session on the UMB-FAT (d = -0.09), Body Project participants showed an increase in anti-fat bias at this time point (d = 0.22). Nonetheless, BAM and Body Project did not differ in reductions on the EPSI subscale at either baseline to post session (BAM: d = -0.13; BP: d = -0.22) or baseline to 8-week post session (BAM: d = -0.23; BP: d = -0.12).

Thin ideal internalization was assessed using the SATAQ and IBSS-R measures. Neither BAM nor Body Project demonstrated a reduction on the SATAQ at either baseline to post session (BAM: d = -0.11; BP: d = -0.09) or baseline to 8-week post session (BAM: d = 0.07; BP: d = 0.11). Hypothesis 2c is further disproved as BAM participants showed greater reductions of thin ideal internalization on the IBSS-R at baseline to post session (d = -0.82) compared to Body Project participants (d = -0.52) while both interventions maintained a similar level of reduction from baseline to 8-week post session (BAM: d = -0.47; BP: d = -0.47).
